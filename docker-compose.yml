networks:
  net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.23.0.0/24

services:
  # Postgres for Airflow metadata
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - net

  # Airflow Webserver
  airflow:
    build:
      context: .
      dockerfile: Dockerfile
    image: airflow-dbt
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      HADOOP_NAMENODE_HOST: namenode
      HADOOP_NAMENODE_PORT: 8020
    volumes:
      - ./dags:/opt/airflow/dags
      - ./dbt:/opt/airflow/dbt
      - ./airflow_cfg:/opt/airflow/config
      - ./data:/opt/airflow/data
    ports:
      - "8081:8080"
    command: webserver
    networks:
      - net

  # Airflow Scheduler
  airflow-scheduler:
    image: airflow-dbt
    depends_on:
      - postgres
      - namenode
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__WEBSERVER__SECRET_KEY: 'my-secret-key'
      HADOOP_NAMENODE_HOST: namenode
      HADOOP_NAMENODE_PORT: 8020
    volumes:
      - ./dags:/opt/airflow/dags
      - ./dbt:/opt/airflow/dbt
      - ./airflow_cfg:/opt/airflow/config
      - ./data:/opt/airflow/data
    command: scheduler
    networks:
      - net

  # Airflow Initialization
  airflow-init:
    image: airflow-dbt
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    entrypoint: >
      bash -c "
        airflow db upgrade &&
        airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com
      "
    volumes:
      - ./dags:/opt/airflow/dags
      - ./dbt:/opt/airflow/dbt
      - ./airflow_cfg:/opt/airflow/config
    networks:
      - net

  # Zookeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:5.1.0
    hostname: zookeeper
    container_name: zookeeper-iot
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - net

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:5.1.0
    container_name: kafka-iot
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-iot:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-iot:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_HOURS: 168
    depends_on:
      - zookeeper
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - net

  # Kafka Tools
  kafka-tools:
    image: confluentinc/cp-kafka:5.1.0
    container_name: kafka-tools
    command: tail -f /dev/null
    networks:
      - net

  # Cassandra
  cassandra:
    image: bitnami/cassandra:latest
    hostname: cassandra
    container_name: cassandra-iot
    ports:
      - "9042:9042"
    environment:
      - "MAX_HEAP_SIZE=256M"
      - "HEAP_NEWSIZE=128M"
      - "CASSANDRA_PASSWORD=cassandra"
    volumes:
      - cassandra_data:/bitnami/cassandra
      - ./data/schema.cql:/docker-entrypoint-initdb.d/schema.cql
    networks:
      - net

  # Spark Master
  spark-master:
    image: bde2020/spark-master:3.0.0-hadoop3.2-java11
    container_name: spark-master
    hostname: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
      - "4040:4040"
      - "4041:4041"
    environment:
      - INIT_DAEMON_STEP=false
      - SPARK_DRIVER_HOST=spark-master
    volumes:
      - ./data/spark:/opt/spark-data
      - ./:/workspace
    networks:
      - net

  # Spark Worker
  spark-worker-1:
    image: bde2020/spark-worker:3.0.0-hadoop3.2-java11
    container_name: spark-worker-1
    hostname: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - "8083:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
    volumes:
      - ./data/spark:/opt/spark-data
    networks:
      - net

  # HDFS Namenode
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.1.3-java8
    container_name: namenode
    hostname: namenode
    volumes:
      - ./data/namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
    ports:
      - "9870:9870"
      - "8020:8020"
    networks:
      - net

  # HDFS Datanode
  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.1.3-java8
    container_name: datanode
    hostname: datanode
    volumes:
      - ./data/datanode:/hadoop/dfs/data
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
    depends_on:
      - namenode
    ports:
      - "50075:50075"
      - "50010:50010"
    networks:
      - net

volumes:
  postgres_data:
  cassandra_data:
  kafka_data: